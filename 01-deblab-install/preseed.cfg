#_preseed_V1
#### Contents of the preconfiguration file (for trixie)
### Localization
# Preseeding only locale sets language, country and locale.
d-i debian-installer/locale string en_US

# Keyboard selection.
d-i keyboard-configuration/xkb-keymap select us
# d-i keyboard-configuration/toggle select No toggling

### Network configuration
# netcfg will choose an interface that has link if possible. This makes it
# skip displaying a list if there is more than one interface.
d-i netcfg/choose_interface select enp5s0

# Automatic network configuration is the default.
# If you prefer to configure the network manually, uncomment this line and
# the static network configuration below.
#d-i netcfg/disable_autoconfig boolean true

# If you want the preconfiguration file to work on systems both with and
# without a dhcp server, uncomment these lines and the static network
# configuration below.
#d-i netcfg/dhcp_failed note
#d-i netcfg/dhcp_options select Configure network manually

# Static network configuration.
#
# IPv4 example
#d-i netcfg/get_ipaddress string 192.168.1.42
#d-i netcfg/get_netmask string 255.255.255.0
#d-i netcfg/get_gateway string 192.168.1.1
#d-i netcfg/get_nameservers string 192.168.1.1
#d-i netcfg/confirm_static boolean true
#
# IPv6 example
#d-i netcfg/get_ipaddress string fc00::2
#d-i netcfg/get_netmask string ffff:ffff:ffff:ffff::
#d-i netcfg/get_gateway string fc00::1
#d-i netcfg/get_nameservers string fc00::1
#d-i netcfg/confirm_static boolean true

# Any hostname and domain names assigned from dhcp take precedence over
# values set here. However, setting the values still prevents the questions
# from being shown, even if values come from dhcp.
d-i netcfg/get_hostname string deblab
d-i netcfg/get_domain string granie.home

# If you want to force a hostname, regardless of what either the DHCP
# server returns or what the reverse DNS entry for the IP is, uncomment
# and adjust the following line.
#d-i netcfg/hostname string somehost

# Disable that annoying WEP key dialog.
d-i netcfg/wireless_wep string
# The wacky dhcp hostname that some ISPs use as a password of sorts.
#d-i netcfg/dhcp_hostname string radish

# If you want to completely disable firmware lookup (i.e. not use firmware
# files or packages that might be available on installation images):
#d-i hw-detect/firmware-lookup string never

# If non-free firmware is needed for the network or other hardware, you can
# configure the installer to always try to load it, without prompting. Or
# change to false to disable asking.
d-i hw-detect/load_firmware boolean true

### Network console
# Use the following settings if you wish to make use of the network-console
# component for remote installation over SSH. This only makes sense if you
# intend to perform the remainder of the installation manually.
#d-i anna/choose_modules string network-console
#d-i network-console/authorized_keys_url string http://10.0.0.1/openssh-key
#d-i network-console/password password r00tme
#d-i network-console/password-again password r00tme

### Mirror settings
# Mirror protocol:
# If you select ftp, the mirror/country string does not need to be set.
# Default value for the mirror protocol: http.
#d-i mirror/protocol string ftp
d-i mirror/country string manual
d-i mirror/http/hostname string deb.debian.org
d-i mirror/http/directory string /debian
d-i mirror/http/proxy string

# Suite to install.
d-i mirror/suite string testing
# Suite to use for loading installer components (optional).
d-i mirror/udeb/suite string testing

### Account setup
d-i passwd/root-login boolean false

# To create a normal user account.
d-i passwd/user-fullname string Deblab Admin
d-i passwd/username string nimda
d-i passwd/user-password-crypted password $1$g2jU0Nbg$kPr4.FZfoqT7yHMAVxhZ2/
d-i passwd/user-uid string 1010

# The user account will be added to some standard initial groups. To
# override that, use this.
d-i passwd/user-default-groups string sudo

### Clock and time zone setup
d-i clock-setup/utc boolean true
d-i time/zone string Europe/Paris
d-i clock-setup/ntp boolean true
d-i clock-setup/ntp-server string ntp.univ-lyon1.fr

### Partitioning

### Do NOT install on the USB stick(!)
#d-i partman/early_command string \
#  USBDEV_LIST="$(mktemp)"; \
#  list-devices usb-partition | sed "s/\(.*\)./\1/" > "$USBDEV_LIST"; \
# BOOTDEV="$(list-devices disk | grep -vf "$USBDEV_LIST" | head -n 1)"; \
# debconf-set partman-auto/disk "$BOOTDEV"; \
# debconf-set grub-installer/bootdev "$BOOTDEV"; \
#  while /bin/true; do sleep 0.01; rm -f /target/etc/grub.d/30_os-prober; done &

# install on biggest disk available
#d-i partman/early_command string \
#  PRIMARYDISK=$(lsblk -lbn --output SIZE,NAME | sort -n | tail -n 1 | cut -d" " -f2);\
#  debconf-set partman-auto/disk "$PRIMARYDISK"; \
#  debconf-set grub-installer/bootdev "$PRIMARYDISK";

d-i partman-auto/disk string /dev/nvme0n1

d-i partman-auto/method string lvm
d-i partman-auto-lvm/guided_size string 10GB

d-i partman-lvm/device_remove_lvm boolean true
d-i partman-md/device_remove_md boolean true
d-i partman-lvm/confirm boolean true
d-i partman-lvm/confirm_nooverwrite boolean true

d-i partman-auto/expert_recipe string \
    efi-boot-lvm-root-var-tmp :: \
        256 256 256 ext4 \
            $primary{ } $bootable{ } \
            device{ /dev/nvme0n1 } method{ format } format{ } use_filesystem{ } filesystem{ ext4 } \
            label{ boot } \
            mountpoint{ /boot } \
        . \
        64 64 64 free \
            $iflabel{ gpt } \
            $primary{ } \
            $reusemethod{ } \
            device{ /dev/nvme0n1 } method{ efi } format{ } \
        . \
        10240 10240 10240 ext4 \
            $defaultignore{ } \
            $primary{ } \
            method{ lvm } device{ /dev/nvme0n1 } vg_name{ host } \
        . \
        3072 5120 5120 ext4 \
            $lvmok{} in_vg{ host } lv_name{ root } \
            method{ lvm } format{ } use_filesystem{ } filesystem{ ext4 } \
            label{ root } \
            mountpoint{ / } \
            options/rw{ rw } \
            options/relatime{ relatime } \
            options/errors{ errors=remount-ro } \
        . \
        3072 5120 5120 ext4 \
            $lvmok{ } in_vg{ host } lv_name{ var } \
            method{ lvm } format{ } use_filesystem{ } filesystem{ ext4 } \
            label{ var } \
            mountpoint{ /var } \
            options/rw{ rw } \
            options/relatime{ relatime } \
            options/data{ data=ordered } \
        . \
        1024 2048 2048 ext4 \
            $lvmok{ } in_vg{ host } lv_name{ temp } \
            method{ lvm } format{ } use_filesystem{ } filesystem{ ext4 } \
            label{ temp } \
            mountpoint{ /tmp } \
            options/rw{ rw } \
            options/relatime{ relatime } \
            options/data{ data=ordered } \
            options/nodev{ nodev } \
            options/nosuid{ nosuid } \
            options/noexec{ noexec } \
        .
# Free space ?
#       . \
#       256 100% 100% ext4 \
#       $lvmok{ } \
#       method{ keep } \
#       lv_name{ placeholder } \
#       .

d-i partman-basicfilesystems/no_swap boolean false
d-i partman-basicfilesystems/swap_check_failed boolean false

# This makes partman automatically partition without confirmation, provided
# that you told it what to do using one of the methods above.
d-i partman-partitioning/confirm_write_new_label boolean true
d-i partman/choose_partition select finish
d-i partman/confirm boolean true
d-i partman/confirm_nooverwrite boolean true

# Force UEFI booting ('BIOS compatibility' will be lost). Default: false.
d-i partman-efi/non_efi_system boolean true

# Ensure the partition table is GPT - this is required for EFI
d-i partman-basicfilesystems/choose_label string gpt
d-i partman-basicfilesystems/default_label string gpt
d-i partman-partitioning/choose_label string gpt
d-i partman-partitioning/default_label string gpt
d-i partman-partitioning/choose_label select gpt
d-i partman-partitioning/default_label string gpt

# This makes partman automatically partition without confirmation.
d-i partman-md/confirm boolean true
d-i partman-partitioning/confirm_write_new_label boolean true
d-i partman/choose_partition select finish
d-i partman/confirm boolean true
d-i partman/confirm_nooverwrite boolean true

## Controlling how partitions are mounted
d-i partman/mount_style select uuid

### Base system installation
d-i base-installer/install-recommends boolean true
d-i base-installer/kernel/image string linux-image-amd64

### Apt setup
d-i apt-setup/cdrom/set-first boolean false
d-i apt-setup/non-free-firmware boolean true
d-i apt-setup/non-free boolean false
d-i apt-setup/contrib boolean false
d-i apt-setup/disable-cdrom-entries boolean true

d-i apt-setup/use_mirror boolean true
d-i apt-setup/services-select multiselect security, updates
d-i apt-setup/security_host string security.debian.org

### Package selection
tasksel tasksel/first multiselect ssh-server
d-i pkgsel/run_tasksel boolean true
d-i pkgsel/include string python3 python3-apt lvm2 systemd-zram-generator
d-i pkgsel/upgrade select full-upgrade
popularity-contest popularity-contest/participate boolean false

### Boot loader installation
d-i grub-installer/only_debian boolean true
d-i grub-installer/with_other_os boolean false
d-i grub-installer/bootdev string /dev/nvme0n1

d-i finish-install/reboot_in_progress note

#### Advanced options
### Running custom commands after the installation
d-i preseed/late_command string \
# Restore free space
# in-target sh -c 'lvremove -f --noudevsync main/placeholder || true'; \
# Init nimda home
  in-target sh -c 'mkdir -p --mode=0700 /home/nimda/.ssh'; \
  sh -c 'cat /cdrom/deblab/ssh_key.pub > /target/home/nimda/.ssh/authorized_keys'; \
  in-target sh -c 'chown -R nimda:nimda /home/nimda/.ssh'; \
  in-target sh -c 'chmod 0600 /home/nimda/.ssh/authorized_keys'; \
# no root login
  in-target sh -c 'usermod -p "!" root'; \
  in-target sh -c 'sed -i "s/^#PermitRootLogin.*\$/PermitRootLogin prohibit-password/g" /etc/ssh/sshd_config'; \
  in-target sh -c 'echo "IPv4: \\\4" >> /etc/issue && echo "" >> /etc/issue'; \
# zram
  in-target sh -c 'systemctl daemon-reload'; \
  in-target sh -c 'systemctl enable /dev/zram0'; \
# black list pcspkr
  in-target sh -c 'echo blacklist pcspkr >> /etc/modprobe.d/blacklist.conf'; \
# sources.list
  in-target sh -c 'sed -i "s/trixie/testing/g" /etc/apt/sources.list'; \
  in-target sh -c 'sed -i "s/^deb-src.*\$//g" /etc/apt/sources.list'; \
  in-target sh -c 'eject || true';