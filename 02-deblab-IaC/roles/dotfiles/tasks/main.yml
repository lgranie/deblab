---
- name: Installing dependencies
  ansible.builtin.apt:
    pkg: "{{ dotfiles.dependencies }}"
    update_cache: no

- name: Generate SSH key
  ansible.builtin.user:
    name: "{{ dotfiles.user.login }}"
    shell: /usr/bin/zsh
    generate_ssh_key: yes
    ssh_key_type: ed25519
    ssh_key_file: .ssh/id_ed25519
    ssh_key_passphrase: ""
    force: no
  register: user_created

- name: Deleting origin dotfiles
  ansible.builtin.file:
    path: "/home/{{ dotfiles.user.login }}/{{ item }}"
    state: absent
  loop:
    - .bashrc
    - .bash_logout
    - .profile
  when: user_created.changed

- name: Add a host in the configuration
  community.general.ssh_config:
    user: "{{ dotfiles.user.login }}"
    remote_user: "{{ dotfiles.user.email }}"
    host: "{{ dotfiles.repo.server }}"
    identity_file: "/home/{{ dotfiles.user.login }}/.ssh/id_ed25519"
    state: present
  when: user_created.changed

- name: Pause until you can add pub key to github
  ansible.builtin.debug:
    var: user_created.ssh_public_key
  when: user_created.changed

- name: Pause until you can add pub key to github
  ansible.builtin.pause:
  when: user_created.changed

- name: "Accept {{ dotfiles.repo.server }} ssh fingerprints"
  shell: ssh-keyscan -H {{ dotfiles.repo.server }} >> ~/.ssh/known_hosts
  become: yes
  become_user: "{{ dotfiles.user.login }}"
  when: user_created.changed

- name: Cloning dotfiles repo
  ansible.builtin.git:
    repo: "{{ dotfiles.repo.url }}"
    dest: "/home/{{ dotfiles.user.login }}/.dotfiles"
    clone: yes
    update: yes
  become: yes
  become_user: "{{ dotfiles.user.login }}"
  register: dotfiles_updated

- name: Installing configs
  ansible.builtin.command:
    cmd: "stow -R {{ item }}"
    chdir: "/home/{{ dotfiles.user.login }}/.dotfiles"
  with_items:
    "{{ dotfiles.configs }}"
  become: yes
  become_user: "{{ dotfiles.user.login }}"
  when: dotfiles_updated.changed
...